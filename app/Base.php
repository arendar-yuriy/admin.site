<?php

namespace App;

use App\Scopes\BasketTrait;
use App\Scopes\ScopesTrait;
use App\Scopes\TimeTravel;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

class Base extends Model
{
    use TimeTravel;
    use SoftDeletes;
    use BasketTrait;
    use ScopesTrait;
    /**
     * validation rules for current model
     * @var array
     */
    public $validation_rules = [];

    /**
     * The attributes that should be mutated to dates.
     *
     * @var array
     */
    protected $dates = ['deleted_at'];

    public function __construct(array $attributes = [])
    {
        static::saved(function ($model) {
            $route = \Route::current();
            if($route !== null)
                $action_name = ($route->getName() !== null) ? $route->getName() : $route->getUri();
            else
                $action_name = 'none';

            if(\Auth::user() !== null)
                $user_id = \Auth::user()->id;
            else
                $user_id = 0;
            $revision = config('timetraveller.model');
            (new $revision)->create([
                'revisionable_type' => get_class($model),
                'revisionable_id'   => $model->id,
                'admin_user_id'   => $user_id,
                'action'   => $action_name,
                'at'                => (new \DateTime())->getTimestamp(),
                'by'                => $model->getBy(),
                'state'             => serialize($model),
            ]);
        });

        static::deleting(function($model){
            $revision = config('timetraveller.model');
            $route = \Route::current();
            $action_name = ($route->getName() !== null) ? $route->getName() : $route->getUri();
            (new $revision)->create([
                'revisionable_type' => get_class($model),
                'revisionable_id'   => $model->id,
                'admin_user_id'   => \Auth::user()->id,
                'action'   => $action_name,
                'at'                => (new \DateTime())->getTimestamp(),
                'by'                => $model->getBy(),
                'state'             => serialize($model),
            ]);
        });
        parent::__construct($attributes);
    }

    public function getBy()
    {
        return \Auth::user()->name . ' ' . \Auth::user()->lastname;
    }

    public function save(array $options = [])
    {

        return parent::save($options); // TODO: Change the autogenerated stub
    }



}